import{connect}from"cloudflare:sockets";let userID="f8302502-e922-4745-ad70-e99b230de37f",proxyIP="",sub="",subconverter="SUBAPI.fxxk.dedyn.io",subconfig="https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_MultiMode.ini",subProtocol="https",socks5Address="";if(!isValidUUID(userID))throw new Error("uuid is not valid");let fakeUserID,fakeHostName,parsedSocks5Address={},enableSocks=!1,noTLS="false";const expire=4102329600;let proxyIPs,socks5s,go2Socks5s=["*ttvnw.net"],addresses=[],addressesapi=[],addressesnotls=[],addressesnotlsapi=[],addressescsv=[],DLS=8,FileName="edgetunnel",BotToken="",ChatID="",proxyhosts=[],proxyhostsURL="https://raw.githubusercontent.com/cmliu/CFcdnVmess2sub/main/proxyhosts",RproxyIP="false",httpsPorts=["2053","2083","2087","2096","8443"];export default{async fetch(e,t,s){try{const s=e.headers.get("User-Agent")||"null",n=s.toLowerCase();userID=(t.UUID||userID).toLowerCase();const o=new Date;o.setHours(0,0,0,0);const r=Math.ceil(o.getTime()/1e3),a=await MD5MD5(`${userID}${r}`);if(fakeUserID=a.slice(0,8)+"-"+a.slice(8,12)+"-"+a.slice(12,16)+"-"+a.slice(16,20)+"-"+a.slice(20),fakeHostName=a.slice(6,9)+"."+a.slice(13,19),proxyIP=t.PROXYIP||proxyIP,proxyIPs=await ADD(proxyIP),proxyIP=proxyIPs[Math.floor(Math.random()*proxyIPs.length)],socks5Address=t.SOCKS5||socks5Address,socks5s=await ADD(socks5Address),socks5Address=socks5s[Math.floor(Math.random()*socks5s.length)],socks5Address=socks5Address.split("//")[1]||socks5Address,t.CFPORTS&&(httpsPorts=await ADD(t.CFPORTS)),sub=t.SUB||sub,subconverter=t.SUBAPI||subconverter,subconverter.includes("http://")?(subconverter=subconverter.split("//")[1],subProtocol="http"):subconverter=subconverter.split("//")[1]||subconverter,subconfig=t.SUBCONFIG||subconfig,socks5Address)try{parsedSocks5Address=socks5AddressParser(socks5Address),RproxyIP=t.RPROXYIP||"false",enableSocks=!0}catch(e){let s=e;console.log(s.toString()),RproxyIP=t.RPROXYIP||!proxyIP?"true":"false",enableSocks=!1}else RproxyIP=t.RPROXYIP||!proxyIP?"true":"false";t.ADD&&(addresses=await ADD(t.ADD)),t.ADDAPI&&(addressesapi=await ADD(t.ADDAPI)),t.ADDNOTLS&&(addressesnotls=await ADD(t.ADDNOTLS)),t.ADDNOTLSAPI&&(addressesnotlsapi=await ADD(t.ADDNOTLSAPI)),t.ADDCSV&&(addressescsv=await ADD(t.ADDCSV)),DLS=t.DLS||DLS,BotToken=t.TGTOKEN||BotToken,ChatID=t.TGID||ChatID,t.GO2SOCKS5&&(go2Socks5s=await ADD(t.GO2SOCKS5));const i=e.headers.get("Upgrade"),c=new URL(e.url);if(c.searchParams.has("sub")&&""!==c.searchParams.get("sub")&&(sub=c.searchParams.get("sub")),FileName=t.SUBNAME||FileName,c.searchParams.has("notls")&&(noTLS="true"),i&&"websocket"===i){if(proxyIP=c.searchParams.get("proxyip")||proxyIP,new RegExp("/proxyip=","i").test(c.pathname)?proxyIP=c.pathname.toLowerCase().split("/proxyip=")[1]:new RegExp("/proxyip.","i").test(c.pathname)&&(proxyIP=`proxyip.${c.pathname.toLowerCase().split("/proxyip.")[1]}`),socks5Address=c.searchParams.get("socks5")||socks5Address,new RegExp("/socks5=","i").test(c.pathname))socks5Address=c.pathname.split("5=")[1];else if((new RegExp("/socks://","i").test(c.pathname)||new RegExp("/socks5://","i").test(c.pathname))&&(socks5Address=c.pathname.split("://")[1].split("#")[0],socks5Address.includes("@"))){let e=socks5Address.split("@")[0];/^(?:[A-Z0-9+/]{4})*(?:[A-Z0-9+/]{2}==|[A-Z0-9+/]{3}=)?$/i.test(e)&&!e.includes(":")&&(e=atob(e)),socks5Address=`${e}@${socks5Address.split("@")[1]}`}if(socks5Address)try{parsedSocks5Address=socks5AddressParser(socks5Address),enableSocks=!0}catch(e){let t=e;console.log(t.toString()),enableSocks=!1}else enableSocks=!1;return await vlessOverWSHandler(e)}switch(c.pathname.toLowerCase()){case"/":return t.URL302?Response.redirect(t.URL302,302):t.URL?await proxyURL(t.URL,c):new Response(JSON.stringify(e.cf,null,4),{status:200,headers:{"content-type":"application/json"}});case`/${fakeUserID}`:const o=await getVLESSConfig(userID,e.headers.get("Host"),sub,"CF-Workers-SUB",RproxyIP,c);return new Response(`${o}`,{status:200});case`/${userID}`:{await sendMessage(`#获取订阅 ${FileName}`,e.headers.get("CF-Connecting-IP"),`UA: ${s}</tg-spoiler>\n域名: ${c.hostname}\n<tg-spoiler>入口: ${c.pathname+c.search}</tg-spoiler>`);const o=await getVLESSConfig(userID,e.headers.get("Host"),sub,s,RproxyIP,c),r=Date.now(),a=new Date(r);a.setHours(0,0,0,0);const i=Math.floor((r-a.getTime())/864e5*24*1099511627776/2);let l=i,d=i,u=26388279066624;if(t.CFEMAIL&&t.CFKEY){const e=t.CFEMAIL,s=t.CFKEY,n=t.CFID||0,o=await getAccountId(e,s);if(o){const t=new Date;t.setUTCHours(0,0,0,0);const r=t.toISOString(),a=(new Date).toISOString(),i=await getSum(o,n,e,s,r,a);l=i[0],d=i[1],u=102400}}return n&&n.includes("mozilla")?new Response(`${o}`,{status:200,headers:{"Content-Type":"text/plain;charset=utf-8","Profile-Update-Interval":"6","Subscription-Userinfo":`upload=${l}; download=${d}; total=${u}; expire=${expire}`}}):new Response(`${o}`,{status:200,headers:{"Content-Disposition":`attachment; filename=${FileName}; filename*=utf-8''${encodeURIComponent(FileName)}`,"Content-Type":"text/plain;charset=utf-8","Profile-Update-Interval":"6","Subscription-Userinfo":`upload=${l}; download=${d}; total=${u}; expire=${expire}`}})}default:return t.URL302?Response.redirect(t.URL302,302):t.URL?await proxyURL(t.URL,c):new Response("不用怀疑！你UUID就是错的！！！",{status:404})}}catch(e){return new Response(e.toString())}}};async function vlessOverWSHandler(e){const t=new WebSocketPair,[s,n]=Object.values(t);n.accept();let o="",r="";const log=(e,t)=>{console.log(`[${o}:${r}] ${e}`,t||"")},a=e.headers.get("sec-websocket-protocol")||"",i=makeReadableWebSocketStream(n,a,log);let c={value:null},l=!1;return i.pipeTo(new WritableStream({async write(e,t){if(l)return await handleDNSQuery(e,n,null,log);if(c.value){const t=c.value.writable.getWriter();return await t.write(e),void t.releaseLock()}const{hasError:s,message:a,addressType:i,portRemote:d=443,addressRemote:u="",rawDataIndex:p,vlessVersion:h=new Uint8Array([0,0]),isUDP:f}=processVlessHeader(e,userID);if(o=u,r=`${d}--${Math.random()} ${f?"udp ":"tcp "} `,s)throw new Error(a);if(f){if(53!==d)throw new Error("UDP 代理仅对 DNS（53 端口）启用");l=!0}const w=new Uint8Array([h[0],0]),m=e.slice(p);if(l)return handleDNSQuery(m,n,w,log);log(`处理 TCP 出站连接 ${u}:${d}`),handleTCPOutBound(c,i,u,d,m,n,w,log)},close(){log("readableWebSocketStream 已关闭")},abort(e){log("readableWebSocketStream 已中止",JSON.stringify(e))}})).catch((e=>{log("readableWebSocketStream 管道错误",e)})),new Response(null,{status:101,webSocket:s})}async function handleTCPOutBound(e,t,s,n,o,r,a,i){async function connectAndWrite(s,n,r=!1){i(`connected to ${s}:${n}`);const a=r?await socks5Connect(t,s,n,i):connect({hostname:s,port:n});e.value=a;const c=a.writable.getWriter();return await c.write(o),c.releaseLock(),a}let c=!1;go2Socks5s.length>0&&enableSocks&&(c=await async function(e){return!(!go2Socks5s.includes(atob("YWxsIGlu"))&&!go2Socks5s.includes(atob("Kg==")))||go2Socks5s.some((t=>{let s=t.replace(/\*/g,".*");return new RegExp(`^${s}$`,"i").test(e)}))}(s));let l=await connectAndWrite(s,n,c);remoteSocketToWS(l,r,a,(async function(){enableSocks?l=await connectAndWrite(s,n,!0):(proxyIP&&""!=proxyIP?proxyIP.includes("]:")?(n=proxyIP.split("]:")[1]||n,proxyIP=proxyIP.split("]:")[0]||proxyIP):2===proxyIP.split(":").length&&(n=proxyIP.split(":")[1]||n,proxyIP=proxyIP.split(":")[0]||proxyIP):proxyIP=atob("cHJveHlpcC5meHhrLmRlZHluLmlv"),l=await connectAndWrite(proxyIP||s,n)),l.closed.catch((e=>{console.log("retry tcpSocket closed error",e)})).finally((()=>{safeCloseWebSocket(r)})),remoteSocketToWS(l,r,a,null,i)}),i)}function makeReadableWebSocketStream(e,t,s){let n=!1;return new ReadableStream({start(o){e.addEventListener("message",(e=>{if(n)return;const t=e.data;o.enqueue(t)})),e.addEventListener("close",(()=>{safeCloseWebSocket(e),n||o.close()})),e.addEventListener("error",(e=>{s("WebSocket 服务器发生错误"),o.error(e)}));const{earlyData:r,error:a}=base64ToArrayBuffer(t);a?o.error(a):r&&o.enqueue(r)},pull(e){},cancel(t){n||(s(`可读流被取消，原因是 ${t}`),n=!0,safeCloseWebSocket(e))}})}function processVlessHeader(e,t){if(e.byteLength<24)return{hasError:!0,message:"invalid data"};const s=new Uint8Array(e.slice(0,1));let n=!1,o=!1;if(stringify(new Uint8Array(e.slice(1,17)))===t&&(n=!0),!n)return{hasError:!0,message:`invalid user ${new Uint8Array(e.slice(1,17))}`};const r=new Uint8Array(e.slice(17,18))[0],a=new Uint8Array(e.slice(18+r,18+r+1))[0];if(1===a);else{if(2!==a)return{hasError:!0,message:`command ${a} is not support, command 01-tcp,02-udp,03-mux`};o=!0}const i=18+r+1,c=e.slice(i,i+2),l=new DataView(c).getUint16(0);let d=i+2;const u=new Uint8Array(e.slice(d,d+1))[0];let p=0,h=d+1,f="";switch(u){case 1:p=4,f=new Uint8Array(e.slice(h,h+p)).join(".");break;case 2:p=new Uint8Array(e.slice(h,h+1))[0],h+=1,f=(new TextDecoder).decode(e.slice(h,h+p));break;case 3:p=16;const t=new DataView(e.slice(h,h+p)),s=[];for(let e=0;e<8;e++)s.push(t.getUint16(2*e).toString(16));f=s.join(":");break;default:return{hasError:!0,message:`invild addressType is ${u}`}}return f?{hasError:!1,addressRemote:f,addressType:u,portRemote:l,rawDataIndex:h+p,vlessVersion:s,isUDP:o}:{hasError:!0,message:`addressValue is empty, addressType is ${u}`}}async function remoteSocketToWS(e,t,s,n,o){let r=s,a=!1;await e.readable.pipeTo(new WritableStream({start(){},async write(e,s){a=!0,t.readyState!==WS_READY_STATE_OPEN&&s.error("webSocket.readyState is not open, maybe close"),r?(t.send(await new Blob([r,e]).arrayBuffer()),r=null):t.send(e)},close(){o(`remoteConnection!.readable is close with hasIncomingData is ${a}`)},abort(e){console.error("remoteConnection!.readable abort",e)}})).catch((e=>{console.error("remoteSocketToWS has exception ",e.stack||e),safeCloseWebSocket(t)})),!1===a&&n&&(o("retry"),n())}function base64ToArrayBuffer(e){if(!e)return{error:null};try{e=e.replace(/-/g,"+").replace(/_/g,"/");const t=atob(e);return{earlyData:Uint8Array.from(t,(e=>e.charCodeAt(0))).buffer,error:null}}catch(e){return{error:e}}}function isValidUUID(e){return/^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)}const WS_READY_STATE_OPEN=1,WS_READY_STATE_CLOSING=2;function safeCloseWebSocket(e){try{e.readyState!==WS_READY_STATE_OPEN&&e.readyState!==WS_READY_STATE_CLOSING||e.close()}catch(e){console.error("safeCloseWebSocket error",e)}}const byteToHex=[];for(let e=0;e<256;++e)byteToHex.push((e+256).toString(16).slice(1));function unsafeStringify(e,t=0){return(byteToHex[e[t+0]]+byteToHex[e[t+1]]+byteToHex[e[t+2]]+byteToHex[e[t+3]]+"-"+byteToHex[e[t+4]]+byteToHex[e[t+5]]+"-"+byteToHex[e[t+6]]+byteToHex[e[t+7]]+"-"+byteToHex[e[t+8]]+byteToHex[e[t+9]]+"-"+byteToHex[e[t+10]]+byteToHex[e[t+11]]+byteToHex[e[t+12]]+byteToHex[e[t+13]]+byteToHex[e[t+14]]+byteToHex[e[t+15]]).toLowerCase()}function stringify(e,t=0){const s=unsafeStringify(e,t);if(!isValidUUID(s))throw TypeError(`生成的 UUID 不符合规范 ${s}`);return s}async function handleDNSQuery(e,t,s,n){try{const o="8.8.4.4",r=53;let a=s;const i=connect({hostname:o,port:r});n(`连接到 ${o}:${r}`);const c=i.writable.getWriter();await c.write(e),c.releaseLock(),await i.readable.pipeTo(new WritableStream({async write(e){t.readyState===WS_READY_STATE_OPEN&&(a?(t.send(await new Blob([a,e]).arrayBuffer()),a=null):t.send(e))},close(){n(`DNS 服务器(${o}) TCP 连接已关闭`)},abort(e){console.error(`DNS 服务器(${o}) TCP 连接异常中断`,e)}}))}catch(e){console.error(`handleDNSQuery 函数发生异常，错误信息: ${e.message}`)}}async function socks5Connect(e,t,s,n){const{username:o,password:r,hostname:a,port:i}=parsedSocks5Address,c=connect({hostname:a,port:i}),l=new Uint8Array([5,2,0,2]),d=c.writable.getWriter();await d.write(l),n("已发送 SOCKS5 问候消息");const u=c.readable.getReader(),p=new TextEncoder;let h,f=(await u.read()).value;if(5!==f[0])return void n(`SOCKS5 服务器版本错误: 收到 ${f[0]}，期望是 5`);if(255===f[1])return void n("服务器不接受任何认证方法");if(2===f[1]){if(n("SOCKS5 服务器需要认证"),!o||!r)return void n("请提供用户名和密码");const e=new Uint8Array([1,o.length,...p.encode(o),r.length,...p.encode(r)]);if(await d.write(e),f=(await u.read()).value,1!==f[0]||0!==f[1])return void n("SOCKS5 服务器认证失败")}switch(e){case 1:h=new Uint8Array([1,...t.split(".").map(Number)]);break;case 2:h=new Uint8Array([3,t.length,...p.encode(t)]);break;case 3:h=new Uint8Array([4,...t.split(":").flatMap((e=>[parseInt(e.slice(0,2),16),parseInt(e.slice(2),16)]))]);break;default:return void n(`无效的地址类型: ${e}`)}const w=new Uint8Array([5,1,0,...h,s>>8,255&s]);if(await d.write(w),n("已发送 SOCKS5 请求"),f=(await u.read()).value,0===f[1])return n("SOCKS5 连接已建立"),d.releaseLock(),u.releaseLock(),c;n("SOCKS5 连接建立失败")}function socks5AddressParser(e){let t,s,n,o,[r,a]=e.split("@").reverse();if(a){const e=a.split(":");if(2!==e.length)throw new Error('无效的 SOCKS 地址格式：认证部分必须是 "username:password" 的形式');[t,s]=e}const i=r.split(":");if(o=Number(i.pop()),isNaN(o))throw new Error("无效的 SOCKS 地址格式：端口号必须是数字");n=i.join(":");if(n.includes(":")&&!/^\[.*\]$/.test(n))throw new Error("无效的 SOCKS 地址格式：IPv6 地址必须用方括号括起来，如 [2001:db8::1]");return{username:t,password:s,hostname:n,port:o}}function revertFakeInfo(e,t,s,n){return n&&(e=atob(e)),e=e.replace(new RegExp(fakeUserID,"g"),t).replace(new RegExp(fakeHostName,"g"),s),n&&(e=btoa(e)),e}async function MD5MD5(e){const t=new TextEncoder,s=await crypto.subtle.digest("MD5",t.encode(e)),n=Array.from(new Uint8Array(s)).map((e=>e.toString(16).padStart(2,"0"))).join(""),o=await crypto.subtle.digest("MD5",t.encode(n.slice(7,27)));return Array.from(new Uint8Array(o)).map((e=>e.toString(16).padStart(2,"0"))).join("").toLowerCase()}async function ADD(e){var t=e.replace(/[	|"'\r\n]+/g,",").replace(/,+/g,",");","==t.charAt(0)&&(t=t.slice(1)),","==t.charAt(t.length-1)&&(t=t.slice(0,t.length-1));return t.split(",")}async function proxyURL(e,t){const s=await ADD(e),n=s[Math.floor(Math.random()*s.length)];let o=new URL(n);console.log(o);let r=o.protocol.slice(0,-1)||"https",a=o.hostname,i=o.pathname,c=o.search;"/"==i.charAt(i.length-1)&&(i=i.slice(0,-1)),i+=t.pathname;let l=`${r}://${a}${i}${c}`,d=await fetch(l),u=new Response(d.body,{status:d.status,statusText:d.statusText,headers:d.headers});return u.headers.set("X-New-URL",l),u}function checkSUB(e){sub&&""!=sub||addresses.length+addressesapi.length+addressesnotls.length+addressesnotlsapi.length+addressescsv.length!=0||(addresses=["Join.my.Telegram.channel.CMLiussss.to.unlock.more.premium.nodes.cf.090227.xyz#加入我的频道t.me/CMLiussss解锁更多优选节点","visa.cn:443","www.visa.com:8443","cis.visa.com:2053","africa.visa.com:2083","www.visa.com.sg:2087","www.visaeurope.at:2096","www.visa.com.mt:8443","qa.visamiddleeast.com","time.is","www.wto.org:8443","chatgpt.com:2087","icook.hk","[2606:4700::]#IPv6"],e.includes(".workers.dev")&&(addressesnotls=["usa.visa.com:2095","myanmar.visa.com:8080","www.visa.com.tw:8880","www.visaeurope.ch:2052","www.visa.com.br:2082","www.visasoutheasteurope.com:2086"]))}const 啥啥啥_写的这是啥啊="dmxlc3M=";function 配置信息(e,t){const s=atob(啥啥啥_写的这是啥啊),n=FileName;let o=t,r=443;const a=e,i=t,c="/?ed=2560";let l=["tls",!0];const d=t,u="randomized";t.includes(".workers.dev")&&(o="visa.cn",r=80,l=["",!1]);return[`${s}://${a}@${o}:${r}?encryption=none&security=${l[0]}&sni=${d}&fp=${u}&type=ws&host=${i}&path=${encodeURIComponent(c)}#${encodeURIComponent(n)}`,`- type: ${s}\n  name: ${FileName}\n  server: ${o}\n  port: ${r}\n  uuid: ${a}\n  network: ws\n  tls: ${l[1]}\n  udp: false\n  sni: ${d}\n  client-fingerprint: ${u}\n  ws-opts:\n    path: "${c}"\n    headers:\n      host: ${i}`]}let subParams=["sub","base64","b64","clash","singbox","sb"];async function getVLESSConfig(e,t,s,n,o,r){checkSUB(t);const a=n.toLowerCase(),i=配置信息(e,t),c=i[0],l=i[1];let d="";if(t.includes(".workers.dev")||t.includes(".pages.dev")){if(proxyhostsURL&&(!proxyhosts||0==proxyhosts.length))try{const e=await fetch(proxyhostsURL);if(!e.ok)return void console.error("获取地址时出错:",e.status,e.statusText);const t=await e.text(),s=t.split("\n").filter((e=>""!==e.trim()));proxyhosts=proxyhosts.concat(s)}catch(e){}0!=proxyhosts.length&&(d=proxyhosts[Math.floor(Math.random()*proxyhosts.length)]+"/")}if(a.includes("mozilla")&&!subParams.some((e=>r.searchParams.has(e)))){const r=socks5s.map((e=>e.includes("@")?e.split("@")[1]:e.includes("//")?e.split("//")[1]:e));let a="";go2Socks5s.length>0&&enableSocks&&(a=`${decodeURIComponent("SOCKS5%EF%BC%88%E7%99%BD%E5%90%8D%E5%8D%95%EF%BC%89%3A%20")}`,go2Socks5s.includes(atob("YWxsIGlu"))||go2Socks5s.includes(atob("Kg=="))?a+=`${decodeURIComponent("%E6%89%80%E6%9C%89%E6%B5%81%E9%87%8F")}\n`:a+=`\n  ${go2Socks5s.join("\n  ")}\n`);let i="";return s&&""!=s?(i+=enableSocks?`CFCDN（访问方式）: Socks5\n  ${r.join("\n  ")}\n${a}`:proxyIP&&""!=proxyIP?`CFCDN（访问方式）: ProxyIP\n  ${proxyIPs.join("\n  ")}\n`:"true"==o?"CFCDN（访问方式）: 自动获取ProxyIP\n":"CFCDN（访问方式）: 无法访问, 需要您设置 proxyIP/PROXYIP ！！！\n",i+=`\nSUB（优选订阅生成器）: ${s}`):(i+=enableSocks?`CFCDN（访问方式）: Socks5\n  ${r.join("\n  ")}\n${a}`:proxyIP&&""!=proxyIP?`CFCDN（访问方式）: ProxyIP\n  ${proxyIPs.join("\n  ")}\n`:"CFCDN（访问方式）: 无法访问, 需要您设置 proxyIP/PROXYIP ！！！\n",i+="\n您的订阅内容由 内置 addresses/ADD* 参数变量提供\n",addresses.length>0&&(i+=`ADD（TLS优选域名&IP）: \n  ${addresses.join("\n  ")}\n`),addressesnotls.length>0&&(i+=`ADDNOTLS（noTLS优选域名&IP）: \n  ${addressesnotls.join("\n  ")}\n`),addressesapi.length>0&&(i+=`ADDAPI（TLS优选域名&IP 的 API）: \n  ${addressesapi.join("\n  ")}\n`),addressesnotlsapi.length>0&&(i+=`ADDNOTLSAPI（noTLS优选域名&IP 的 API）: \n  ${addressesnotlsapi.join("\n  ")}\n`),addressescsv.length>0&&(i+=`ADDCSV（IPTest测速csv文件 限速 ${DLS} ）: \n  ${addressescsv.join("\n  ")}\n`)),`\n################################################################\nSubscribe / sub 订阅地址, 支持 Base64、clash-meta、sing-box 订阅格式\n---------------------------------------------------------------\n快速自适应订阅地址:\nhttps://${d}${t}/${e}\nhttps://${d}${t}/${e}?sub\n\nBase64订阅地址:\nhttps://${d}${t}/${e}?b64\nhttps://${d}${t}/${e}?base64\n\nclash订阅地址:\nhttps://${d}${t}/${e}?clash\n\nsingbox订阅地址:\nhttps://${d}${t}/${e}?sb\nhttps://${d}${t}/${e}?singbox\n---------------------------------------------------------------\n################################################################\n${FileName} 配置信息\n---------------------------------------------------------------\nHOST: ${t}\nUUID: ${e}\nFKID: ${fakeUserID}\nUA: ${n}\n\n${i}\nSUBAPI（订阅转换后端）: ${subProtocol}://${subconverter}\nSUBCONFIG（订阅转换配置文件）: ${subconfig}\n---------------------------------------------------------------\n################################################################\nv2ray\n---------------------------------------------------------------\n${c}\n---------------------------------------------------------------\n################################################################\nclash-meta\n---------------------------------------------------------------\n${l}\n---------------------------------------------------------------\n################################################################\ntelegram 交流群 技术大佬~在线发牌!\nhttps://t.me/CMLiussss\n---------------------------------------------------------------\ngithub 项目地址 Star!Star!Star!!!\nhttps://github.com/cmliu/edgetunnel\n---------------------------------------------------------------\n################################################################\n`}{if("function"!=typeof fetch)return"Error: fetch is not available in this environment.";let i=[],c=[],l=[],d=[];t.includes(".workers.dev")?(noTLS="true",fakeHostName=`${fakeHostName}.workers.dev`,l=await getAddressesapi(addressesnotlsapi),d=await getAddressescsv("FALSE")):t.includes(".pages.dev")?fakeHostName=`${fakeHostName}.pages.dev`:t.includes("worker")||t.includes("notls")||"true"==noTLS?(noTLS="true",fakeHostName=`notls${fakeHostName}.net`,l=await getAddressesapi(addressesnotlsapi),d=await getAddressescsv("FALSE")):fakeHostName=`${fakeHostName}.xyz`,console.log(`虚假HOST: ${fakeHostName}`);let u=`${subProtocol}://${s}/sub?host=${fakeHostName}&uuid=${fakeUserID}&edgetunnel=cmliu&proxyip=${o}`,p=!0;if(!s||""==s){if(t.includes("workers.dev")||t.includes("pages.dev")){if(proxyhostsURL&&(!proxyhosts||0==proxyhosts.length))try{const e=await fetch(proxyhostsURL);if(!e.ok)return void console.error("获取地址时出错:",e.status,e.statusText);const t=await e.text(),s=t.split("\n").filter((e=>""!==e.trim()));proxyhosts=proxyhosts.concat(s)}catch(e){console.error("获取地址时出错:",e)}proxyhosts=[...new Set(proxyhosts)]}i=await getAddressesapi(addressesapi),c=await getAddressescsv("TRUE"),u=`https://${t}/${fakeUserID}`,(t.includes("worker")||t.includes("notls")||"true"==noTLS)&&(u+="?notls"),console.log(`虚假订阅: ${u}`)}a.includes("CF-Workers-SUB".toLowerCase())||(a.includes("clash")&&!a.includes("nekobox")||r.searchParams.has("clash")&&!a.includes("subconverter")?(u=`${subProtocol}://${subconverter}/sub?target=clash&url=${encodeURIComponent(u)}&insert=false&config=${encodeURIComponent(subconfig)}&emoji=true&list=false&tfo=false&scv=true&fdn=false&sort=false&new_name=true`,p=!1):(a.includes("sing-box")||a.includes("singbox")||(r.searchParams.has("singbox")||r.searchParams.has("sb"))&&!a.includes("subconverter"))&&(u=`${subProtocol}://${subconverter}/sub?target=singbox&url=${encodeURIComponent(u)}&insert=false&config=${encodeURIComponent(subconfig)}&emoji=true&list=false&tfo=false&scv=true&fdn=false&sort=false&new_name=true`,p=!1));try{let o;if(s&&""!=s||1!=p){const e=await fetch(u,{headers:{"User-Agent":`${n} CF-Workers-edgetunnel/cmliu`}});o=await e.text()}else o=await subAddresses(fakeHostName,fakeUserID,noTLS,i,c,l,d);return r.pathname==`/${fakeUserID}`?o:revertFakeInfo(o,e,t,p)}catch(e){return console.error("Error fetching content:",e),`Error fetching content: ${e.message}`}}}async function getAccountId(e,t){try{const s="https://api.cloudflare.com/client/v4/accounts",n=new Headers({"X-AUTH-EMAIL":e,"X-AUTH-KEY":t}),o=await fetch(s,{headers:n});return(await o.json()).result[0].id}catch(e){return!1}}async function getSum(e,t,s,n,o,r){try{const a=new Date(o).toISOString(),i=new Date(r).toISOString(),c=JSON.stringify({query:"query getBillingMetrics($accountId: String!, $filter: AccountWorkersInvocationsAdaptiveFilter_InputObject) {\n\t\t\t\tviewer {\n\t\t\t\t\taccounts(filter: {accountTag: $accountId}) {\n\t\t\t\t\t\tpagesFunctionsInvocationsAdaptiveGroups(limit: 1000, filter: $filter) {\n\t\t\t\t\t\t\tsum {\n\t\t\t\t\t\t\t\trequests\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tworkersInvocationsAdaptive(limit: 10000, filter: $filter) {\n\t\t\t\t\t\t\tsum {\n\t\t\t\t\t\t\t\trequests\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}",variables:{accountId:e,filter:{datetime_geq:a,datetime_leq:i}}}),l=new Headers({"Content-Type":"application/json","X-AUTH-EMAIL":s,"X-AUTH-KEY":n}),d=await fetch("https://api.cloudflare.com/client/v4/graphql",{method:"POST",headers:l,body:c});if(!d.ok)throw new Error(`HTTP error! status: ${d.status}`);const u=await d.json(),p=u?.data?.viewer?.accounts?.[t]?.pagesFunctionsInvocationsAdaptiveGroups,h=u?.data?.viewer?.accounts?.[t]?.workersInvocationsAdaptive;if(!p&&!h)throw new Error("找不到数据");const f=p.reduce(((e,t)=>e+t?.sum.requests),0);return[f,h.reduce(((e,t)=>e+t?.sum.requests),0)]}catch(e){return[0,0]}}let proxyIPPool=[];async function getAddressesapi(e){if(!e||0===e.length)return[];let t="";const s=new AbortController,n=setTimeout((()=>{s.abort()}),2e3);try{const n=await Promise.allSettled(e.map((e=>fetch(e,{method:"get",headers:{Accept:"text/html,application/xhtml+xml,application/xml;","User-Agent":"CF-Workers-edgetunnel/cmliu"},signal:s.signal}).then((e=>e.ok?e.text():Promise.reject())))));for(const[s,o]of n.entries())if("fulfilled"===o.status){const n=await o.value;e[s].includes("proxyip=true")&&(proxyIPPool=proxyIPPool.concat((await ADD(n)).map((e=>{const t=e.split("#")[0]||e;if(!t.includes(":"))return`${t}:443`;{const e=t.split(":")[1];if(!httpsPorts.includes(e))return t}return null})).filter(Boolean))),t+=n+"\n"}}catch(e){console.error(e)}finally{clearTimeout(n)}return await ADD(t)}async function getAddressescsv(e){if(!addressescsv||0===addressescsv.length)return[];let t=[];for(const s of addressescsv)try{const n=await fetch(s);if(!n.ok){console.error("获取CSV地址时出错:",n.status,n.statusText);continue}const o=await n.text();let r;r=o.includes("\r\n")?o.split("\r\n"):o.split("\n");const a=r[0].split(",").indexOf("TLS"),i=0,c=1,l=a+1;if(-1===a){console.error("CSV文件缺少必需的字段");continue}for(let n=1;n<r.length;n++){const o=r[n].split(","),d=o.length-1;if(o[a].toUpperCase()===e&&parseFloat(o[d])>DLS){const e=o[i],n=o[c],r=`${e}:${n}#${o[l]}`;t.push(r),s.includes("proxyip=true")&&"true"==o[a].toUpperCase()&&!httpsPorts.includes(n)&&proxyIPPool.push(`${e}:${n}`)}}}catch(e){console.error("获取CSV地址时出错:",e);continue}return t}function subAddresses(e,t,s,n,o,r,a){const i=/^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|\[.*\]):?(\d+)?#?(.*)?$/;let c;if(addresses=addresses.concat(n),addresses=addresses.concat(o),"true"==s){addressesnotls=addressesnotls.concat(r),addressesnotls=addressesnotls.concat(a);c=[...new Set(addressesnotls)].map((s=>{let n="-1",o=s;const r=o.match(i);if(r)s=r[1],n=r[2]||n,o=r[3]||s;else{if(s.includes(":")&&s.includes("#")){const e=s.split(":");s=e[0];const t=e[1].split("#");n=t[0],o=t[1]}else if(s.includes(":")){const e=s.split(":");s=e[0],n=e[1]}else if(s.includes("#")){const e=s.split("#");s=e[0],o=e[1]}o.includes(":")&&(o=o.split(":")[0])}const a=["8080","8880","2052","2082","2086","2095"];if(!isValidIPv4(s)&&"-1"==n)for(let e of a)if(s.includes(e)){n=e;break}"-1"==n&&(n="80");let c=e;return`${atob(啥啥啥_写的这是啥啊)}://${t}@${s}:${n}?encryption=none&security=&type=ws&host=${c}&path=${encodeURIComponent("/?ed=2560")}#${encodeURIComponent(o+"")}`})).join("\n")}const l=[...new Set(addresses)].map((s=>{let n="-1",o=s;const r=o.match(i);if(r)s=r[1],n=r[2]||n,o=r[3]||s;else{if(s.includes(":")&&s.includes("#")){const e=s.split(":");s=e[0];const t=e[1].split("#");n=t[0],o=t[1]}else if(s.includes(":")){const e=s.split(":");s=e[0],n=e[1]}else if(s.includes("#")){const e=s.split("#");s=e[0],o=e[1]}o.includes(":")&&(o=o.split(":")[0])}if(!isValidIPv4(s)&&"-1"==n)for(let e of httpsPorts)if(s.includes(e)){n=e;break}"-1"==n&&(n="443");let a=e,c="/?ed=2560",l="";const d=proxyIPPool.find((e=>e.includes(s)));d&&(c+=`&proxyip=${d}`),proxyhosts.length>0&&(a.includes(".workers.dev")||a.includes("pages.dev"))&&(c=`/${a}${c}`,a=proxyhosts[Math.floor(Math.random()*proxyhosts.length)],l=" 已启用临时域名中转服务，请尽快绑定自定义域！");return`${atob(啥啥啥_写的这是啥啊)}://${t}@${s}:${n}?encryption=none&security=tls&sni=${a}&fp=random&type=ws&host=${a}&path=${encodeURIComponent(c)}#${encodeURIComponent(o+l)}`})).join("\n");let d=l;return"true"==s&&(d+=`\n${c}`),btoa(d)}async function sendMessage(e,t,s=""){if(""!==BotToken&&""!==ChatID){let n="";const o=await fetch(`http://ip-api.com/json/${t}?lang=zh-CN`);if(200==o.status){const r=await o.json();n=`${e}\nIP: ${t}\n国家: ${r.country}\n<tg-spoiler>城市: ${r.city}\n组织: ${r.org}\nASN: ${r.as}\n${s}`}else n=`${e}\nIP: ${t}\n<tg-spoiler>${s}`;let r="https://api.telegram.org/bot"+BotToken+"/sendMessage?chat_id="+ChatID+"&parse_mode=HTML&text="+encodeURIComponent(n);return fetch(r,{method:"get",headers:{Accept:"text/html,application/xhtml+xml,application/xml;","Accept-Encoding":"gzip, deflate, br","User-Agent":"Mozilla/5.0 Chrome/90.0.4430.72"}})}}function isValidIPv4(e){return/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(e)}
